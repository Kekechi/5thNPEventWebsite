.circle-container {
  $particleNum: 20;
  $particleColor: var(--particle-color);

  position: absolute;
  transform: translateY(10vh);
  bottom: 0;
  left: 50%;
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(
      $particleColor,
      $particleColor 10%,
      hsla(180, 100%, 80%, 0) 56%
    );

    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  $particleBaseSize: 4;

  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $circleSize: 4 + random($particleBaseSize);
      width: $circleSize + px;
      height: $circleSize + px;
      transform: translateX(random(50) - 25 + vmin);

      $framesName: "move-frames-" + $i;
      $moveDuration: 14000 + random(9000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(11500) - 11500 + ms;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(random(100) -50 + vmin, 50 + vmin, 0);
        }

        to {
          transform: translate3d(
            random(100) - 50 + vmin,
            -1 * (random(50) + 50) + vmin,
            0
          );
        }
      }

      .circle {
        animation-delay: random(4000) + ms;
      }
    }
  }
}
